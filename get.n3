@prefix building: <http://127.0.1.1:8080/> .

@prefix brick: <http://buildsys.org/ontologies/Brick#> .
@prefix bframe: <http://buildsys.org/ontologies/BrickFrame#> .
@prefix http: <http://www.w3.org/2011/http#>.
@prefix http_m: <http://www.w3.org/2011/http-methods#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix saref: <https://w3id.org/saref#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .

# Defining subdivisions of the building for scaling up and down the benchmark
building:fiverooms bframe:hasPart
building:Room_SOR42_F_8 , building:Room_SOR42_F_9 , building:Room_SOR42_F_21 , building:Room_SOR42_F_13 , building:Room_SOR42_F_16 .

building:tenrooms bframe:hasPart
building:Room_SOR42_F_6 , building:Room_SOR42_F_7 , building:Room_SOR42_F_8 , building:Room_SOR42_F_9 , building:Room_SOR42_F_21 , building:Room_SOR42_F_13 , building:Room_SOR42_F_16 , building:Room_SOR42_F_14 , building:Room_SOR42_F_15 .

building:twentyrooms bframe:hasPart building:Room_SOR42_F_15 ,
building:Room_SOR42_F_16 ,
building:Room_SOR42_F_1 ,
building:Room_SOR42_F_2 ,
building:Room_SOR42_F_18 ,
building:Room_SOR42_F_19 ,
building:Room_SOR42_F_14 ,
building:Room_SOR42_F_17 ,
building:Room_SOR42_F_13 ,
building:Room_SOR42_F_WC ,
building:Room_SOR42_F_21 ,
building:Room_SOR42_F_22 ,
building:Room_SOR42_F_23 ,
building:Room_SOR42_F_7 ,
building:Room_SOR42_F_5 ,
building:Room_SOR42_F_8 ,
building:Room_SOR42_F_9 ,
building:Room_SOR42_F_4 ,
building:Room_SOR42_F_6 ,
building:Room_SOR42_F_20 .

# The resource whose parts we want to look at.
# So we need to GET the information about it.
{ [] http:mthd http_m:GET; http:requestURI building:Building_B3 . }

# Furthermore, we need to GET the information about all the parts.
{
  building:Building_B3 bframe:hasPart ?part .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?part .
} .

# Furthermore, we need to GET the information about all the things that feed the parts.
{
  building:Building_B3 bframe:hasPart ?space .
  ?thing bframe:feeds ?space .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?thing .
} .

# As the resource is not its own part, we need another rule to GET the information
# about all the things that directly feed the resource.
{
  ?thing bframe:feeds building:Building_B3 .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?thing .
} .

# The thing that feeds the space has a point: the command.
# This rule comes in two flavours: Things directly feeding
# the building or things feeding the building in parts of the building.
{
  building:Building_B3 bframe:hasPart ?space .
  ?thing bframe:feeds ?space .
  ?thing bframe:hasPoint ?luminanceCommand .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?luminanceCommand .
} .
{
  ?thing bframe:feeds building:Building_B3 .
  ?thing bframe:hasPoint ?luminanceCommand .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?luminanceCommand .
} .


# Finally, GETs to the properties.
# Their location of their things is specified in two ways.
# Moreover, they are connected to the their thing in three flavours.
# Hence, six rules:
{
  ?thing bframe:feeds building:Building_B3 .
  ?thing bframe:hasPoint ?point .
  ?point ssn:hasProperty ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .
{
  building:Building_B3 bframe:hasPart ?space .
  ?thing bframe:feeds ?space .
  ?thing bframe:hasPoint ?point .
  ?point ssn:hasProperty ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .
{
  ?thing bframe:feeds building:Building_B3 .
  ?thing bframe:hasPoint ?point .
  ?point sosa:actsOnProperty ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .
{
  building:Building_B3 bframe:hasPart ?space .
  ?thing bframe:feeds ?space .
  ?thing bframe:hasPoint ?point .
  ?point sosa:actsOnProperty ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .
{
  ?thing bframe:feeds building:Building_B3 .
  ?thing bframe:hasPoint ?point .
  ?point sosa:observes ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .
{
  building:Building_B3 bframe:hasPart ?space .
  ?thing bframe:feeds ?space .
  ?thing bframe:hasPoint ?point .
  ?point sosa:observes ?property .
}
=>
{
  [] http:mthd http_m:GET; http:requestURI ?property .
} .

# transititvity
{ ?a bframe:hasPart ?b . ?b bframe:hasPart ?c . } => { ?a bframe:hasPart ?c . } .

# reflexivity
{ ?a bframe:hasPart ?b . } => { ?a bframe:hasPart ?a . ?b bframe:hasPart ?b . } .

{ ?a bframe:hasPart ?b .} =>
    {?b bframe:isPartOf ?a .} .
{ ?a bframe:isPartOf ?b .} =>
    {?b bframe:hasPart ?a .} .
{?a bframe:hasPoint ?b .} =>
    {?b bframe:isPointOf ?a .} .
{?a bframe:isPointOf ?b .} =>
    {?b bframe:hasPoint ?a .} .
{?a bframe:feeds ?b .} =>
    {?b bframe:isFedBy ?a .} .
{?a bframe:isFedBy ?b .} =>
    {?b bframe:feeds ?a .} .
{?a bframe:contains ?b .} =>
    {?b bframe:isLocatedIn ?a .} .
{?a bframe:isLocatedIn ?b .} =>
    {?b bframe:contains ?a .} .
{?a bframe:controls ?b .} =>
    {?b bframe:isControlledBy ?a .} .
{?a bframe:isControlledBy ?b .} =>
    {?b bframe:controls ?a .} .
{?a bframe:hasOutput ?b .} =>
    {?b bframe:isOutputOf ?a .} .
{?a bframe:hasInput ?b .} =>
    {?b bframe:isInputOf ?a .} .
{?a bframe:hasTagSet ?b .} =>
    {?b bframe:isTagSetOf ?a .} .
{?a bframe:hasToken ?b .} =>
    {?b bframe:isTokenOf ?a .} .
